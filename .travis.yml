if: branch = master
language: node_js
node_js:
  - "8"

services:
  - docker
  - redis-server

before_install:
  - node -v
  - npm -v
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"

install:
  - npm install
  - npm install -g istanbul codecov

script:
  - REDIS_HOST=localhost npm test
  - codecov

before_deploy:
    - git tag "$(cat VERSION)"
    - docker build --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg VERSION=$(cat VERSION) -t $DOCKER_USERNAME/fortnite-api:$(cat VERSION) .
    - docker push $DOCKER_USERNAME/fortnite-api:$(cat VERSION)
    - docker tag $DOCKER_USERNAME/fortnite-api:$(cat VERSION) $DOCKER_USERNAME/fortnite-api:latest
    - docker push $DOCKER_USERNAME/fortnite-api:latest

deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  name: v$(cat VERSION)
  skip_cleanup: true

after_deploy:
  - docker run -it --rm cdrx/rancher-gitlab-deploy rancher-gitlab-deploy --rancher-url $RANCHER_URL --rancher-key $RANCHER_KEY --rancher-secret $RANCHER_SECRET --environment $RANCHER_ENVIRONMENT --stack fortnite --service api --new-image $DOCKER_USERNAME/fortnite-api:$(cat VERSION) --finish-upgrade --wait-for-upgrade-to-finish
